block templates
  script(type='text/html', id='indexTemplate')
    #root.container-fluid(data-bind='template: getIndexTemplate')

    script(type='text/html', id='zeroStateTemplate')
      .well.well-small.pull-left.opencenter-container
        header.container-header
          .pull-left.btn-group
            button.btn.btn-mini.dropdown-toggle.disabled(data-bind="click: $root.getActions", data-toggle='dropdown')
              i.icon-cog
            ul.dropdown-menu
              li.nav-header Manage
              li.divider
              // ko foreach: dash.actions
              li: a(tabindex='-1', href='#', data-bind='click: $root.doAction.bind($data, $parent), text: name + "..."')
              // /ko
          .pull-left.container-name: span(data-bind='text: name')

        .container-body
          .empty_overlay_widget
            .create_one_now_arrow
            .create_one_now_section
              .create_one_message
                div
                  p.create_one_message_top= "You don't have OpenCenter Agent nodes yet."
                div
                  p.create_one_message_middle= "Install some now."
                div
                  p.create_one_message_description= "The OpenCenter agent allows your nodes to show up in this control panel. Learn more about"
                    a.external(href="#")= "OpenCenter Agent."

    script(type='text/html', id='indexItemTemplate')
      .well.well-small.pull-left.opencenter-container
        header.container-header
          .pull-left.btn-group
            button.btn.btn-mini.dropdown-toggle(data-bind='click: $root.getActions, attr: {"data-id": id}', data-toggle='dropdown')
              i.icon-cog
            ul.dropdown-menu
              li.nav-header Manage
              li.divider
              // ko if: !dash.actions().length
              li: span#placeHolder: .form-throb
              // /ko
              // ko foreach: dash.actions
              li: a(tabindex='-1', href='#', data-bind='click: $root.doAction.bind($data, $parent), text: name + "..."')
              // /ko
          .pull-left.container-name: span(data-bind='text: name')

        .container-body
          .drop-target(data-bind='sortable: dash.agents, attr: {"data-id": id}, dropper: dash.locked')
            .btn-group.node
              button.btn.btn-small.btn-node.statusDescription(disabled='disabled', data-bind='css: dash.statusClass')
              button.btn.btn-small.btn-node.dropdown-toggle(data-bind='click: $root.getActions, attr: {disabled: !!task_id()}', data-toggle='dropdown')
                i.icon-cog
              ul.dropdown-menu
                li.nav-header= "Manage"
                li.divider
                // ko if: !dash.actions().length
                li: span#placeHolder: .form-throb
                // /ko
                // ko foreach: dash.actions
                li: a(tabindex='-1', href='#', data-bind='click: $root.doAction.bind($data, $parent), text: name + "..."')
                // /ko
              button.btn.btn-small.btn-node.node-name(data-bind='text: name, popper: $data, css: {dragDisable: dash.locked}, attr: {"data-id": id}')
            .clear-right

          div(data-bind='template: {name: "indexItemTemplate", foreach: dash.containers}')
    #indexTaskLogPane(data-bind='showPane: dashboard.displayTaskLogPane')
      #taskPane
        .pane-title= 'Tasks'
        .pane-notifications(data-bind='foreach: getTaskCounts')
          .notify(data-bind='css: statusClass, text: count')
        .pane-contents(data-bind='foreach: wsTasks')
          .task(data-bind='attr: {"data-id": id}, click: $root.selectTask, css: {active: dash.active()}')
            .task-status(data-bind='css: dash.statusClass')
            .task-name(data-bind='text: dash.label')
      #logPane
        .pane-title(data-bind='text: getTaskTitle')
        .pane-contents(data-bind='text: getTaskLog')

    #indexNoConnectionModal.modal.hide.fade(data-keyboard='false', data-backdrop='static', role='dialog', aria-labelledby='indexNoConnectionModal', aria-hidden='true')
      .modal-body
        .warning-section
          #no-connection-img
          .text-section
            h1.warning-header= "Disconnected"
            p.warning-text= "It looks like we've lost the connection to the OpenCenter server. To continue, please ensure your connection to the OpenCenter server is working properly."
            p.status-text= "We're trying to reconnect now..."

    #indexInputModal.modal.hide.fade(data-backdrop='static', tabindex='-1', role='dialog', aria-labelledby='indexInputModal', aria-hidden='true')
      form#inputForm.form-horizontal
        .modal-header
          //button.close(type='button', data-dismiss='modal', aria-hidden='true') &times;
          h3= "Additional Input Required"
        .modal-body
          #multiStepForm.carousel.slide(data-interval="false")
            .carousel-inner
              // ko foreach: getPlans
              .item(data-bind='css: {active: !$index()%2}')
                fieldset
                  // ko foreach: args
                  .control-group
                    label.control-label(data-bind='text: value.friendly, attr: {for: key}')
                    .controls
                      input(data-bind='tipper: value, attr: {id: key, name: key, placeholder: value.placeholder, value: value.default, type: dashboard.convertValueType(value.type)}, css: {required: value.required}')
                  // /ko
              // /ko
        .modal-footer
          button.btn.btn-small.btn-secondary.back(data-slide="prev", href='#multiStepForm')= "< Back"
          button.btn.btn-small.btn-primary.next(data-slide="next", href='#multiStepForm')= "Next Step >"
          button.btn.btn-small.btn-primary.submit= "Submit"
          button.cancel.btn-link(type='reset', data-dismiss='modal') Cancel

    #indexLoginModal.modal.hide.fade(data-keyboard='false', data-backdrop='static', role='dialog', aria-labelledby='indexLoginModal', aria-hidden='true')
      .modal-body
        .login-container.row-fluid
          #rackspace-logo-container
          #login-form
            form#loginForm.error-icon-only
              span.welcome-message= "Welcome to the OpenCenter Control Panel!"
              .alert.alert-error.hide= "Invalid username and/or password"
              .control-group
                  label.control-label(for='username')= "Username"
                  .controls
                    input(type='text', name='username', required='true')
              .control-group
                  label.control-label(for='password')= "Password"
                  .controls
                    input(type='password', name='password', required='true')
              #login-status
                .form-actions
                  button.login-button(type='submit')= "Login"
                  span.form-throb.hide
